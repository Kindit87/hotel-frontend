import { Component } from '@angular/core';
import {FormBuilder, FormGroup, Validators} from '@angular/forms';
import {Room} from '../models/room';
import {RoomsService} from '../services/rooms.service';
import {environment} from '../../environments/environment';
import * as L from 'leaflet';
import {Router} from '@angular/router';
delete (L.Icon.Default.prototype as any)._getIconUrl;

L.Icon.Default.mergeOptions({
  iconRetinaUrl: 'assets/leaflet/marker-icon-2x.png',
  iconUrl: 'assets/leaflet/marker-icon.png',
  shadowUrl: 'assets/leaflet/marker-shadow.png'
});

@Component({
  selector: 'app-homepage',
  templateUrl: './homepage.component.html',
  styleUrl: './homepage.component.css'
})
export class HomepageComponent {
  bookingForm: FormGroup
  contactForm: FormGroup
  isMenuOpen = false
  rooms: Room[] = []

  amenities = [
    { icon: "üì∂", title: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π Wi-Fi", description: "–í—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤–æ –≤—Å–µ—Ö –Ω–æ–º–µ—Ä–∞—Ö" },
    { icon: "üöó", title: "–ü–∞—Ä–∫–æ–≤–∫–∞", description: "–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ö—Ä–∞–Ω—è–µ–º–∞—è –ø–∞—Ä–∫–æ–≤–∫–∞" },
    { icon: "üçΩÔ∏è", title: "–†–µ—Å—Ç–æ—Ä–∞–Ω", description: "–ò–∑—ã—Å–∫–∞–Ω–Ω–∞—è –∫—É—Ö–Ω—è –∏ –∑–∞–≤—Ç—Ä–∞–∫–∏" },
    { icon: "üèä", title: "–ë–∞—Å—Å–µ–π–Ω", description: "–ö—Ä—ã—Ç—ã–π –±–∞—Å—Å–µ–π–Ω —Å –ø–æ–¥–æ–≥—Ä–µ–≤–æ–º" },
    { icon: "üí™", title: "–§–∏—Ç–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä", description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ" },
    { icon: "‚òï", title: "–ö–∞—Ñ–µ-–±–∞—Ä", description: "–ù–∞–ø–∏—Ç–∫–∏ –∏ –∑–∞–∫—É—Å–∫–∏ 24/7" },
    { icon: "üõéÔ∏è", title: "–ö–æ–Ω—Å—å–µ—Ä–∂", description: "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≥–æ—Å—Ç–µ–π" },
    { icon: "üìç", title: "–¶–µ–Ω—Ç—Ä –≥–æ—Ä–æ–¥–∞", description: "–í 5 –º–∏–Ω—É—Ç–∞—Ö –æ—Ç –≥–ª–∞–≤–Ω—ã—Ö –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π" },
  ]

  reviews = [
    {
      name: "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
      avatar: "–ê–°",
      rating: 5,
      comment:
        "–ü—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—ã–π –æ—Ç–µ–ª—å! –ü–µ—Ä—Å–æ–Ω–∞–ª –æ—á–µ–Ω—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, –Ω–æ–º–µ—Ä–∞ —á–∏—Å—Ç—ã–µ –∏ –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ. –ó–∞–≤—Ç—Ä–∞–∫–∏ –ø—Ä–æ—Å—Ç–æ –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–µ. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω–µ–º—Å—è —Å—é–¥–∞ —Å–Ω–æ–≤–∞!",
    },
    {
      name: "–ú–∏—Ö–∞–∏–ª –ü–µ—Ç—Ä–æ–≤",
      avatar: "–ú–ü",
      rating: 5,
      comment:
        "–û—Ç–ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞. –í—Å–µ –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ –ø–µ—à–µ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏. –ë–∞—Å—Å–µ–π–Ω –∏ —Ñ–∏—Ç–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ.",
    },
    {
      name: "–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞",
      avatar: "–ï–ö",
      rating: 5,
      comment:
        "–†–æ—Å–∫–æ—à–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º –≤–∏–¥–æ–º. –†–µ—Å—Ç–æ—Ä–∞–Ω –æ—Ç–µ–ª—è –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–µ –±–ª—é–¥–∞. –°–µ—Ä–≤–∏—Å –±–µ–∑—É–ø—Ä–µ—á–Ω—ã–π, —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–±—è –∫–∞–∫ –¥–æ–º–∞.",
    },
  ]

  constructor(
    private fb: FormBuilder,
    private roomsService: RoomsService,
    private router: Router
  ) {
    this.bookingForm = this.fb.group({
      checkin: ["", Validators.required],
      checkout: ["", Validators.required],
      guests: ["", Validators.required],
    })

    this.contactForm = this.fb.group({
      firstName: ["", Validators.required],
      lastName: ["", Validators.required],
      email: ["", [Validators.required, Validators.email]],
      phone: ["", Validators.required],
      message: ["", Validators.required],
    })
  }

  ngOnInit(): void {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(today.getDate() + 1);

    const checkIn = today.toISOString().split('T')[0];
    const checkOut = tomorrow.toISOString().split('T')[0];

    this.roomsService.getAvailableRooms(checkIn, checkOut).subscribe({
      next: (data) => this.rooms = data.slice(0, 6),
      error: (err) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–Ω–∞—Ç:", err)
    });
  }


  ngAfterViewInit(): void {
    const map = L.map('map').setView([55.7558, 37.6173], 15); // –ú–æ—Å–∫–≤–∞

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    L.marker([55.7558, 37.6173])
      .addTo(map)
      .bindPopup('–ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞—à –æ—Ç–µ–ª—å!')
      .openPopup();
  }

  toggleMenu() {
    this.isMenuOpen = !this.isMenuOpen
  }

  onBookingSubmit() {
    if (this.bookingForm.valid) {
      const { checkin, checkout, guests } = this.bookingForm.value;

      this.router.navigate(['/rooms'], {
        queryParams: {
          checkIn: checkin,
          checkOut: checkout,
          capacity: guests
        }
      });
    }
  }

  onContactSubmit() {
    if (this.contactForm.valid) {
      console.log("Contact form submitted:", this.contactForm.value)
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    }
  }

  bookRoom(roomId: number) {
    console.log("Booking room:", roomId)
    // –õ–æ–≥–∏–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
  }

  getStars(rating: number): string[] {
    return Array(rating).fill("‚≠ê")
  }

  scrollToSection(sectionId: string) {
    const element = document.getElementById(sectionId)
    if (element) {
      element.scrollIntoView({ behavior: "smooth" })
    }
    this.isMenuOpen = false
  }

  protected readonly environment = environment;
}
